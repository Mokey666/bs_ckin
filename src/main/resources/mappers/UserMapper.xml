<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.User" >
    <constructor >
      <idArg column="uid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="uname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="image" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    uid, uname, email, phone, sex, password, image, role
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bs_user
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bs_user
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.pojo.User" >
    insert into bs_user (uid, uname, email, 
      phone, sex, password, 
      image, role)
    values (#{uid,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.User" >
    insert into bs_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.User" >
    update bs_user
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.User" >
    update bs_user
    set uname = #{uname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>

  <select id="selectByIdAndPassword" parameterType="map" resultType="int">
    select count(1)
    from bs_user
    where uid=#{userId}
    and password=#{password}
  </select>

  <select id="selectById" parameterType="string" resultType="int">
    select count(1)
    from bs_user
    where uid=#{userId}
  </select>

  <select id="selectLogin" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bs_user
    where uid=#{userId}
    and password=#{password}
  </select>

  <select id="selectByIdAndEmail" parameterType="map" resultType="int">
    select count(1)
    from bs_user
    from bs_user
    where uid=#{userId}
    and email=#{email}
  </select>

  <update id="modifyPassword" parameterType="map">
    update bs_user
    set password=#{newPasswoed}
    where uid=#{userId}
  </update>

  <select id="selectByIdAndPassword" parameterType="map" resultType="int">
    select count(1)
    from bs_user
    where uid=#{userId}
    and password=#{password}
  </select>
  <select id="checkEmailByUserId" resultType="int" parameterType="map">
    select count(1) from bs_user
    where uid!=#{userId}
    and email=#{email}
  </select>
</mapper>